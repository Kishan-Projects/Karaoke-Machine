-- clear existing tables

DROP TABLE IF EXISTS QueueItem; 
DROP TABLE IF EXISTS SongVersion; 
DROP TABLE IF EXISTS Contributor; 
DROP TABLE IF EXISTS Song; 
DROP TABLE IF EXISTS Payment; 
DROP TABLE IF EXISTS User;


CREATE TABLE User(
	UserID char(20) PRIMARY KEY,
	Name char(20)
	);

CREATE TABLE Payment(
	PayID char(10),                   -- generate PayID using math with UserID and TimePaid as parameters
	UserID char(20),
	Amount decimal(4,2),
	TimePaid DATETIME,
	
	CONSTRAINT PK_Payment PRIMARY KEY(PayID, UserID),
	FOREIGN KEY(UserID) REFERENCES User(UserID)
	);



CREATE TABLE Song(
	SongID char(10) PRIMARY KEY,
	Title varchar(75),
	Artist varchar(75)
	);

CREATE TABLE SongVersion(
	KaraokeID char(12),
	SongID char(10), 
	Type char(6), 
	
	PRIMARY KEY (KaraokeID, SongID),
	FOREIGN KEY (SongID) REFERENCES Song(SongID)
	);

CREATE TABLE Contributor(
	SongID char(10), 
	Name varchar(75), 
	IsPerformer char(4), 
	IsWriter char(4), 
	IsComposer char(4), 
	
	PRIMARY KEY (SongID, Name), 
	FOREIGN KEY (SongID) REFERENCES Song(SongID)
	);


-- items have a queuetype of either "Free" for the free queue
-- or "Premium" for the accelerated queue
CREATE TABLE QueueItem(
	QueueType char(10),
	KaraokeID char(12),
	PayID char(10),
	UserID char(20),
	
	PRIMARY KEY(KaraokeID, PayID, UserID),
	FOREIGN KEY (KaraokeID) REFERENCES SongVersion(KaraokeID),
	FOREIGN KEY(PayID) REFERENCES Payment(PayID),
	FOREIGN KEY(UserID) REFERENCES User(UserID)
	);
	
	